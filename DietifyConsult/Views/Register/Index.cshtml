@model Entities.Concrete.Client
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LoginRegisterLayout.cshtml";
}

<body>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <section class="main-content-w3layouts-agileits">
        <div class="container">
            <h3 class="tittle">Üye Ol</h3>
            <div class="inner-sec">
                <div class="login p-5 bg-light mx-auto mw-100">
                    @using (Html.BeginForm("Index", "Register", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "validateForm()" }))
                    {
                        <div class="form-row">
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom01">İsim</label>
                                @Html.TextBoxFor(x=>x.ClientName, new{@class="form-control"})
                                @Html.ValidationMessageFor(x=>x.ClientName)
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">Soy İsim</label>
                                @Html.TextBoxFor(x=>x.ClientSurName,new{@class="form-control"})
                                @Html.ValidationMessageFor(x=>x.ClientSurName)
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">Email</label>
                                @Html.EditorFor(x => x.ClientEmail, new { htmlAttributes = new { @class = "form-control", type = "email" } })
                                @Html.ValidationMessageFor(x=>x.ClientEmail)
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">Doğum Tarihi</label>
                                @Html.EditorFor(x => x.ClientBirthDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                @Html.ValidationMessageFor(x=>x.ClientBirthDate)
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">Boy</label>
                                @Html.EditorFor(x => x.ClientHeight, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                                @Html.ValidationMessageFor(x=>x.ClientHeight)
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom02">Kilo</label>
                                @Html.EditorFor(x => x.ClientWeight, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                                @Html.ValidationMessageFor(x=>x.ClientWeight)

                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="validationCustom01">Telefon Numarası</label>
                                @Html.TextBoxFor(x=>x.PhoneNumber, new{@class="form-control" , type="tel"})
                                @Html.ValidationMessageFor(x=>x.PhoneNumber)
                            </div>
                            <div class="form-group col-md-6">
                                <label for="exampleInputPassword2 mb-2">Görsel Dosya Yolu</label>
                                @Html.TextBoxFor(x => x.ClientImage, new { @class = "form-control", type = "file" })
                                @Html.ValidationMessageFor(x => x.ClientImage)
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="exampleInputPassword1 mb-2">Şifre</label>
                                @Html.PasswordFor(x => x.ClientPassword, new {@class="form-control",id="password1"})
                                @Html.ValidationMessageFor(x=>x.ClientPassword)
                            </div>
                            <div class="form-group col-md-6">
                                <label for="exampleInputPassword2 mb-2">Şifreyi Onayla</label>
                                <input type="password" class="form-control" id="password2" placeholder="" required="">
                            </div>
                           

                        </div>
                        <div class="login p-3 bg-light mx-auto text-center ">
                            <button id="btn1" type="submit" class="btn btn-primary submit mb-4" style="text-align: center;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Üye Ol&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</button>
                            <p>
                                <a id="politics" href="Login/Index">Üye Ol'a tıklayarak şartlarınızı kabul ediyorum</a>
                            </p>
                        </div>
                    }
                    <script>
                        function validateForm() {
                            const password = document.getElementById('password1').value;
                            const confirmPassword = document.getElementById('password2').value;

                            if (password !== confirmPassword) {
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops...",
                                    text: "Şifreler eşleşmiyor! Lütfen tekrar deneyin.",
                                });
                                return false;
                            }

                            // Check for validation errors from FluentValidation
                            const validationErrors = document.querySelectorAll('.field-validation-error');
                            if (validationErrors.length > 0) {
                                Swal.fire({
                                    icon: "error",
                                    title: "Doğrulama hatası!",
                                    text: "Lütfen formu kontrol ederek tüm alanları doğru doldurunuz.",
                                });
                                return false;
                            }

                            // All validations passed, show success message
                            Swal.fire({
                                position: "top-end",
                                icon: "success",
                                title: "Başarılı bir şekilde kayıt oluşturuldu.",
                                showConfirmButton: false,
                                timer: 1500
                            });
                            return true;
                        }

                    </script>
                    @* <script>
                    $(document).ready(function () {
                    $("form").submit(function (e) {
                    e.preventDefault(); // Formun normal gönderimini engelle

                    $.ajax({
                    type: "POST",
                    url: "@Url.Action("Index", "Register")",
                    data: $(this).serialize(), // Form verilerini alır
                    success: function (response) {
                    if (response.success) {
                    Swal.fire({
                    position: "top-end",
                    icon: "success",
                    title: "Başarılı bir şekilde kayıt oluşturuldu.",
                    showConfirmButton: false,
                    timer: 1500
                    });
                    } else {
                    if (password !== confirmPassword) {
                    Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Şifreler eşleşmiyor! Lütfen tekrar deneyin.",
                    });
                    return false;
                    }
                    else {
                    Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Başka bir hata oluştu, tekrar deneyin.",
                    });
                    }
                    }
                    },
                    error: function (xhr, status, error) {
                    // Hata durumunda gerekli işlemleri yapabilirsiniz
                    }
                    });
                    });
                    });
                    </script>*@
                    <style>
                        .field-validation-error {
                            color: red;
                        }
                    </style>

                </div>
            </div>
        </div>
    </section>
</body>


