@model Entities.Concrete.Blog
@{
    ViewData["Title"] = "EditBlog";
    Layout = "~/Views/Shared/_ConsultantLayout.cshtml";
}

@using (Html.BeginForm("EditBlog", "Blog", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.Label("Blog başlığı")
    @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogTitle)
    <br/>
    @Html.Label("Blog Görseli")
    <br/>
    <br/>

    @if (!string.IsNullOrEmpty(Model.BlogImage))
    {
        <img src="~/resim/@Model.BlogImage" alt="Blog Görseli" class="img-fluid" style="max-width: 400px; max-height: 300px;"/>
    }

    @Html.HiddenFor(x => x.BlogImage)
    <!-- Mevcut görsel yolunu korumak için gizli alan -->
    @Html.TextBox("BlogImage", null, new { @class = "form-control", type = "file" })
    <!-- Dosya yükleme girişi -->
    @Html.ValidationMessageFor(x => x.BlogImage)

    <br/>
    @Html.Label("Blog İçeriği")
    @Html.TextAreaFor(x => x.BlogDescription, 20, 3, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogDescription)
    <br/>
    @Html.HiddenFor(x => x.BlogID)
    @Html.HiddenFor(x => x.Status)
    @Html.HiddenFor(x => x.ConsultantID)
    @Html.HiddenFor(x => x.BlogCreateDate)
    @Html.HiddenFor(x => x.BlogScore)

    <button class="btn btn-primary">Bloğu Kaydet</button>
}
<style>
    .form-control {
        font-size: 16px; /* Yazı boyutu ayarı */
    }
    .h1{
        color:green
    }
</style>